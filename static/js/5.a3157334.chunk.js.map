{"version":3,"sources":["api/api.js","components/CharactersRow.js","pages/CharacterPage.js","hooks/useCharacters.js"],"names":["swapi","axios","create","CharactersRow","character","name","eye_color","gender","CharacterPage","useState","offset","setOffset","perPage","pageCount","setPageCount","characters","id","setCharacters","useEffect","getCharacters","a","get","res","getData","data","index","length","then","push","useCharacters","useParams","slice","pagination","Math","ceil","className","map","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","to"],"mappings":"qGAAA,8CAEaA,EAFb,OAEqBC,EAAMC,U,uGCAdC,EAAgB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC9B,OACE,+BACE,6BAAKA,EAAUC,OACf,6BAAKD,EAAUE,YACf,6BAAKF,EAAUG,SACf,2B,yBCyDSC,UA1DO,WACpB,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkBF,mBAAS,IAApBG,EAAP,oBACA,EAAkCH,mBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAGMC,ECVqB,SAACC,GAC5B,MAAoCP,mBAAS,IAA7C,mBAAOM,EAAP,KAAmBE,EAAnB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,uCAAG,4BAAAC,EAAA,sEACFpB,IAAMqB,IAAN,sCAAyCL,IADvC,cACdM,EADc,gBAEdC,EAAQD,EAAIE,KAAKT,YAFH,2CAAH,qDAKbQ,EAAO,uCAAG,WAAOnB,GAAP,iBAAAgB,EAAA,sDACRI,EAAO,GAEJC,EAAQ,EAHH,YAGMA,EAAQrB,EAAUsB,QAHxB,gCAIN1B,IAAMqB,IAAIjB,EAAUqB,IAAQE,MAAK,SAACL,GAAD,OAASE,EAAKI,KAAKN,EAAIE,SAJlD,OAGgCC,IAHhC,sBAMdR,EAAcO,GANA,2CAAH,sDASb,OAAOT,EDXYc,CADJC,cACyBd,IAClCe,EAAQhB,EAAWgB,MAAMrB,EAAQA,EAASE,GAE1CoB,EAAU,uCAAG,sBAAAZ,EAAA,sDACjBN,EAAamB,KAAKC,KAAKnB,EAAWW,OAASd,IAD1B,2CAAH,qDAWhB,OAHAM,qBAAU,WACRc,MACC,CAACA,IAEF,qCACE,4CACA,wBAAOG,UAAU,eAAjB,UACE,gCACE,+BACE,sCACA,2CACA,wCACA,4CAGJ,gCACGJ,EAAMK,KAAI,SAAChC,GAAD,OACT,cAAC,EAAD,CAAoCA,UAAWA,GAA3BA,EAAUC,cAIpC,cAAC,IAAD,CACEgC,cAAe,OACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChB3B,UAAWA,EACX4B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAlCkB,SAACC,GACvB,IAAMC,EAAeD,EAAEE,SACvBnC,EAAUkC,EAAe,IAiCrBE,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,WAEnB,cAAC,IAAD,CAAMd,UAAU,OAAOe,GAAI,IAA3B","file":"static/js/5.a3157334.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const swapi = axios.create();\n","import React from \"react\";\n\nexport const CharactersRow = ({ character }) => {\n  return (\n    <tr>\n      <th>{character.name}</th>\n      <th>{character.eye_color}</th>\n      <th>{character.gender}</th>\n      <th>{}</th>\n    </tr>\n  );\n};\n","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { CharactersRow } from \"../components/CharactersRow\";\nimport { useCharacters } from \"../hooks/useCharacters\";\nimport { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nconst CharacterPage = () => {\n  const [offset, setOffset] = useState(0);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n\n  const params = useParams();\n  const characters = useCharacters(params.id);\n  const slice = characters.slice(offset, offset + perPage);\n\n  const pagination = async () => {\n    setPageCount(Math.ceil(characters.length / perPage));\n  };\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n\n  useEffect(() => {\n    pagination();\n  }, [pagination]);\n  return (\n    <>\n      <h1>CHARACTERS</h1>\n      <table className=\"styled-table\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>EYE COLOR</th>\n            <th>GENDER</th>\n            <th>FILMS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {slice.map((character) => (\n            <CharactersRow key={character.name} character={character} />\n          ))}\n        </tbody>\n      </table>\n      <ReactPaginate\n        previousLabel={\"prev\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      <Link className=\"link\" to={\"/\"}>\n        Come Back!\n      </Link>\n    </>\n  );\n};\n\nexport default CharacterPage;\n","import { useEffect, useState } from \"react\";\nimport { swapi } from \"../api/api\";\n\nexport const useCharacters = (id) => {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  const getCharacters = async () => {\n    const res = await swapi.get(`https://swapi.dev/api/films/${id}`);\n    await getData(res.data.characters);\n  };\n\n  const getData = async (character) => {\n    const data = [];\n\n    for (let index = 0; index < character.length; index++) {\n      await swapi.get(character[index]).then((res) => data.push(res.data));\n    }\n    setCharacters(data);\n  };\n\n  return characters;\n};\n"],"sourceRoot":""}