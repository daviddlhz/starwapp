{"version":3,"sources":["api/api.js","components/FilmsRow.js","pages/FilmPage.js","hooks/useFilms.js","components/CharactersRow.js","pages/CharacterPage.js","hooks/useCharacters.js","App.js","index.js"],"names":["swapi","axios","create","FilmsRow","film","id","title","episode_id","director","className","to","FilmPage","films","useState","setFilms","useEffect","getFilms","a","get","res","data","results","useFilms","map","indexOf","CharactersRow","character","name","eye_color","gender","CharacterPage","offset","setOffset","perPage","pageCount","setPageCount","characters","setCharacters","getCharacters","getData","index","length","then","push","useCharacters","useParams","slice","pagination","Math","ceil","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2d58246.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const swapi = axios.create();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const FilmsRow = ({ film, id }) => {\n  return (\n    <tr>\n      <th>{film.title}</th>\n      <th>{film.episode_id}</th>\n      <th>{film.director}</th>\n      <th>\n        <Link className=\"link\" to={`/characters/${id}`}>\n          View\n        </Link>\n      </th>\n    </tr>\n  );\n};\n","import React from \"react\";\nimport { useFilms } from \"../hooks/useFilms\";\nimport { FilmsRow } from \"../components/FilmsRow\";\n\nconst FilmPage = () => {\n  const films = useFilms();\n\n  return (\n    <>\n      <h1>FILMS</h1>\n      <table className=\"styled-table\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>EPISODE NUMBER</th>\n            <th>DIRECTOR</th>\n            <th>CHARACTERS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {films.map((film) => (\n            <FilmsRow\n              key={film.episode_id}\n              film={film}\n              id={films.indexOf(film) + 1}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default FilmPage;\n","import { useEffect, useState } from \"react\";\nimport { swapi } from \"../api/api\";\n\nexport const useFilms = () => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    getFilms();\n  }, []);\n\n  const getFilms = async () => {\n    const res = await swapi.get(\"https://swapi.dev/api/films/\");\n    setFilms(res.data.results);\n  };\n\n  return films;\n};\n","import React from \"react\";\n\nexport const CharactersRow = ({ character }) => {\n  return (\n    <tr>\n      <th>{character.name}</th>\n      <th>{character.eye_color}</th>\n      <th>{character.gender}</th>\n      <th>{}</th>\n    </tr>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CharactersRow } from \"../components/CharactersRow\";\nimport { useCharacters } from \"../hooks/useCharacters\";\nimport { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nexport const CharacterPage = () => {\n  const [offset, setOffset] = useState(0);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n\n  const params = useParams();\n  const characters = useCharacters(params.id);\n  const slice = characters.slice(offset, offset + perPage);\n\n  const pagination = async () => {\n    setPageCount(Math.ceil(characters.length / perPage));\n  };\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n\n  useEffect(() => {\n    pagination();\n  }, [offset]);\n  return (\n    <>\n      <h1>CHARACTERS</h1>\n      <table className=\"styled-table\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>EYE COLOR</th>\n            <th>GENDER</th>\n            <th>FILMS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {slice.map((character) => (\n            <CharactersRow key={character.name} character={character} />\n          ))}\n        </tbody>\n      </table>\n      <ReactPaginate\n        previousLabel={\"prev\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { swapi } from \"../api/api\";\n\nexport const useCharacters = (id) => {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  const getCharacters = async () => {\n    const res = await swapi.get(`https://swapi.dev/api/films/${id}`);\n    await getData(res.data.characters);\n  };\n\n  const getData = async (character) => {\n    const data = [];\n\n    for (let index = 0; index < character.length; index++) {\n      await swapi.get(character[index]).then((res) => data.push(res.data));\n    }\n    setCharacters(data);\n  };\n\n  return characters;\n};\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport FilmPage from \"./pages/FilmPage\";\nimport { CharacterPage } from \"./pages/CharacterPage\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<FilmPage />}></Route>\n          <Route path=\"/characters/:id\" element={<CharacterPage />}></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}